# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: set-product-version
author: Release Engineering <rel-eng@hashicorp.com>
description: Automates setting product version

inputs:
  checkout:
    description: |
      Check out the code repository. Can be disabled if checkout is handled by the caller workflow.
    default: true

runs:
  using: composite

  steps:
    - if: inputs.checkout == 'true'
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - name: Check if Version File Exists
      shell: bash
      env:
        VERSION_FILE: version/VERSION
      run: |
        if [ -f $VERSION_FILE ]; then
          echo "File ${VERSION_FILE} exists."
        else
          echo "File ${VERSION_FILE} does not exist. Please add a VERSION file in the version/ directory"
        fi
    - name: Set Full Product Version
      id: set-product-version
      shell: bash
      run: |
        product_version=$(<version/VERSION)
        product_version=$(echo "$product_version" | sed 's/ //g')
        echo "Product Version: $product_version"
        echo "product-version=$product_version" >> $GITHUB_OUTPUT
    # Examples
    # When product_version = 1.3.0-alpha1, base_product_version = 1.3.0
    - name: Set Base Product Version
      id: set-base-product-version
      shell: bash
      run: |
        product_version=${{ steps.set-product-version.outputs.product-version }}
        base_product_version=${product_version%%-*}
        echo "Base Product Version: $base_product_version"
        echo "base-product-version=$base_product_version" >> $GITHUB_OUTPUT
    # Examples
    # When product_version = 1.3.0-alpha1, prerelease_product_version = alpha1
    - name: Set Prerelease Product Version
      id: set-prerelease-product-version
      shell: bash
      run: |
        product_version=${{ steps.set-product-version.outputs.product-version }}
        prerelease_product_version=${product_version#*-}
        if [ $product_version == $prerelease_product_version ]; then
          prerelease_product_version=""
        fi
        echo "Prerelease Product Version: $prerelease_product_version"
        echo "prerelease-product-version=$prerelease_product_version" >> $GITHUB_OUTPUT
     # Examples
    # When product_version = 1.3.0-alpha1, minor_product_version = 3
    - name: Set Minor Version
      id: set-minor-product-version
      shell: bash
      run: |
        product_version=${{ steps.set-product-version.outputs.product-version }}
        minor_product_version=$(echo "$product_version" | cut -d '.' -f 2)
        echo "Minor Product Version: $minor_product_version"
        echo "minor_product_version=$minor_product_version" >> $GITHUB_OUTPUT

outputs:
  product-version:
    description: 'The product version'
    value: ${{ steps.set-product-version.outputs.product-version }}
  prerelease-product-version:
    description: 'The prerelease portion of the product version'
    value: ${{ steps.set-prerelease-product-version.outputs.prerelease-product-version }}
  base-product-version:
    description: 'The base portion of the product version'
    value: ${{ steps.set-base-product-version.outputs.base-product-version }}
  minor-product-version:
    description: 'The minor portion of the product version'
    value: ${{ steps.set-minor-product-version.outputs.minor_product_version }}
